{"version":3,"sources":["data/tasks.js","components/TaskCard.js","components/Board.js","components/TaskDetailsView.js","components/TaskEditView.js","components/CreateTask.js","components/Modals.js","App.js","serviceWorker.js","index.js"],"names":["priority","priorityColors","colors","statuses","status","id","items","name","tasks","description","queue","TaskCard","props","className","item","Board","useState","taskArray","taskList","setTaskList","useEffect","onDragEnd","result","destination","source","column","_","cloneDeep","droppableId","sourceColumn","destColumn","sourceItems","destItems","splice","index","removed","removedId","map","el","idx","task","Object","entries","key","toUpperCase","length","provided","snapshot","droppableProps","ref","innerRef","isDraggingOver","draggableId","draggableProps","dragHandleProps","onClick","setShow","isDragging","placeholder","TaskDetailsView","DOMParser","parse","editor","useRef","editedItem","setEditedItem","value","onChange","e","target","indexOf","i","config","readonly","tabIndex","onBlur","newContent","toString","changeTask","newTask","Date","now","CreateTask","required","disabled","createNewTask","Modals","handleClose","type","Modal","show","size","onHide","TaskEditView","newArr","push","App","modalItem","setModalItem","modalType","setModalType","handleShowModal","object","obj","newList","assign","newTasks","changedTaskList","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.63ea2c30.chunk.js","sourcesContent":["export const priority = ['High', 'Mid', 'Low']\r\nexport const priorityColors = {'High': 'high', 'Mid': 'mid', 'Low': 'low'}\r\nexport const colors = ['danger', 'warning', 'info', 'success'];\r\nexport const statuses = ['Todo', 'In Progress', 'Review', 'Done'];\r\nexport const status = [\r\n    {id: 1, items: [], name: 'To Do',},\r\n    {id: 2, items: [], name: 'In Progress',},\r\n    {id: 3, items: [], name: 'Review',},\r\n    {id: 4, items: [], name: 'Done'}\r\n]\r\nexport const tasks = [\r\n    {\r\n        id: 't1',\r\n        name: 'Create tasks list',\r\n        description: 'Lists\\n' +\r\n            'Lorem ipsum dolor sit amet, consectetuer adipiscing elit.\\n' +\r\n            'Aliquam tincidunt mauris eu risus.\\n' +\r\n            'Vestibulum auctor dapibus neque.\\n' +\r\n            'Nunc dignissim risus id metus.\\n' +\r\n            'Cras ornare tristique elit.\\n' +\r\n            'Vivamus vestibulum ntulla nec ante.\\n' +\r\n            'Praesent placerat risus quis eros.\\n' +\r\n            'Fusce pellentesque suscipit nibh.\\n' +\r\n            'Integer vitae libero ac risus egestas placerat.\\n' +\r\n            'Vestibulum commodo felis quis tortor.\\n' +\r\n            'Ut aliquam sollicitudin leo.\\n' +\r\n            'Cras iaculis ultricies nulla.\\n' +\r\n            'Donec quis dui at dolor tempor interdum.',\r\n        status: 1,\r\n        queue: 1,\r\n        priority: 'Low'\r\n    },\r\n    {\r\n        id: 't6',\r\n        name: 'Edit item functionality',\r\n        description: 'Lists\\n' +\r\n            'Lorem ipsum dolor sit amet, consectetuer adipiscing elit.\\n' +\r\n            'Aliquam tincidunt mauris eu risus.\\n' +\r\n            'Vestibulum auctor dapibus neque.\\n' +\r\n            'Nunc dignissim risus id metus.\\n' +\r\n            'Cras ornare tristique elit.\\n' +\r\n            'Vivamus vestibulum ntulla nec ante.\\n' +\r\n            'Praesent placerat risus quis eros.\\n' +\r\n            'Fusce pellentesque suscipit nibh.\\n' +\r\n            'Integer vitae libero ac risus egestas placerat.\\n' +\r\n            'Vestibulum commodo felis quis tortor.\\n' +\r\n            'Ut aliquam sollicitudin leo.\\n' +\r\n            'Cras iaculis ultricies nulla.\\n' +\r\n            'Donec quis dui at dolor tempor interdum.',\r\n        status: 1,\r\n        queue: 2,\r\n        priority: 'High'\r\n    },\r\n    {\r\n        id: 't2',\r\n        name: 'Create Board file',\r\n        description: 'Lists\\n' +\r\n            'Lorem ipsum dolor sit amet, consectetuer adipiscing elit.\\n' +\r\n            'Aliquam tincidunt mauris eu risus.\\n' +\r\n            'Vestibulum auctor dapibus neque.\\n' +\r\n            'Nunc dignissim risus id metus.\\n' +\r\n            'Cras ornare tristique elit.\\n' +\r\n            'Vivamus vestibulum ntulla nec ante.\\n' +\r\n            'Praesent placerat risus quis eros.\\n' +\r\n            'Fusce pellentesque suscipit nibh.\\n' +\r\n            'Integer vitae libero ac risus egestas placerat.\\n' +\r\n            'Vestibulum commodo felis quis tortor.\\n' +\r\n            'Ut aliquam sollicitudin leo.\\n' +\r\n            'Cras iaculis ultricies nulla.\\n' +\r\n            'Donec quis dui at dolor tempor interdum.',\r\n        status: 1,\r\n        queue: 3,\r\n        priority: 'Mid'\r\n    },\r\n    {\r\n        id: 't4',\r\n        name: 'Create status table',\r\n        description: 'Lists\\n' +\r\n            'Lorem ipsum dolor sit amet, consectetuer adipiscing elit.\\n' +\r\n            'Aliquam tincidunt mauris eu risus.\\n' +\r\n            'Vestibulum auctor dapibus neque.\\n' +\r\n            'Nunc dignissim risus id metus.\\n' +\r\n            'Cras ornare tristique elit.\\n' +\r\n            'Vivamus vestibulum ntulla nec ante.\\n' +\r\n            'Praesent placerat risus quis eros.\\n' +\r\n            'Fusce pellentesque suscipit nibh.\\n' +\r\n            'Integer vitae libero ac risus egestas placerat.\\n' +\r\n            'Vestibulum commodo felis quis tortor.\\n' +\r\n            'Ut aliquam sollicitudin leo.\\n' +\r\n            'Cras iaculis ultricies nulla.\\n' +\r\n            'Donec quis dui at dolor tempor interdum.',\r\n        status: 1,\r\n        queue: 4,\r\n        priority: 'High'\r\n    },\r\n    {\r\n        id: 't5',\r\n        name: 'Remove item functionality',\r\n        description: 'Lists\\n' +\r\n            'Lorem ipsum dolor sit amet, consectetuer adipiscing elit.\\n' +\r\n            'Aliquam tincidunt mauris eu risus.\\n' +\r\n            'Vestibulum auctor dapibus neque.\\n' +\r\n            'Nunc dignissim risus id metus.\\n' +\r\n            'Cras ornare tristique elit.\\n' +\r\n            'Vivamus vestibulum ntulla nec ante.\\n' +\r\n            'Praesent placerat risus quis eros.\\n' +\r\n            'Fusce pellentesque suscipit nibh.\\n' +\r\n            'Integer vitae libero ac risus egestas placerat.\\n' +\r\n            'Vestibulum commodo felis quis tortor.\\n' +\r\n            'Ut aliquam sollicitudin leo.\\n' +\r\n            'Cras iaculis ultricies nulla.\\n' +\r\n            'Donec quis dui at dolor tempor interdum.',\r\n        status: 3,\r\n        queue: 1,\r\n        priority: 'High'\r\n    },\r\n    {\r\n        id: 't3',\r\n        name: 'Create new task file',\r\n        description: 'Lists\\n' +\r\n            'Lorem ipsum dolor sit amet, consectetuer adipiscing elit.\\n' +\r\n            'Aliquam tincidunt mauris eu risus.\\n' +\r\n            'Vestibulum auctor dapibus neque.\\n' +\r\n            'Nunc dignissim risus id metus.\\n' +\r\n            'Cras ornare tristique elit.\\n' +\r\n            'Vivamus vestibulum ntulla nec ante.\\n' +\r\n            'Praesent placerat risus quis eros.\\n' +\r\n            'Fusce pellentesque suscipit nibh.\\n' +\r\n            'Integer vitae libero ac risus egestas placerat.\\n' +\r\n            'Vestibulum commodo felis quis tortor.\\n' +\r\n            'Ut aliquam sollicitudin leo.\\n' +\r\n            'Cras iaculis ultricies nulla.\\n' +\r\n            'Donec quis dui at dolor tempor interdum.',\r\n        status: 4,\r\n        queue: 1,\r\n        priority: 'Low'\r\n    }\r\n];","import React from \"react\";\r\nimport {priorityColors} from \"../data/tasks\";\r\nimport {FaExclamationTriangle} from 'react-icons/fa'\r\n\r\nexport default function TaskCard(props) {\r\n\r\n\r\n    return (\r\n        <div className='m-n2 p-2 pb-sm-0'>\r\n            <p>\r\n                {props.item.name}\r\n            </p>\r\n            <p>\r\n                <FaExclamationTriangle className={priorityColors[props.item.priority]}/>\r\n            </p>\r\n\r\n\r\n        </div>\r\n    )\r\n}","import React, {useEffect, useState} from \"react\";\r\nimport {colors} from '../data/tasks';\r\nimport {DragDropContext, Draggable, Droppable} from 'react-beautiful-dnd';\r\nimport _ from 'lodash';\r\nimport TaskCard from \"./TaskCard\";\r\n\r\n\r\nconst onDragEnd = (result, taskList, setTaskList) => {\r\n    if (!result.destination) return;\r\n    const {source, destination} = result;\r\n    const column = _.cloneDeep(taskList);\r\n    if (source.droppableId !== destination.droppableId) {\r\n\r\n        const sourceColumn = column[source.droppableId];\r\n        const destColumn = column[destination.droppableId];\r\n        const sourceItems = [...sourceColumn.items];\r\n        const destItems = [...destColumn.items];\r\n        const [removed] = sourceItems.splice(source.index, 1);\r\n        const removedId = removed.id\r\n        destItems.splice(destination.index, 0, removed);\r\n        column[source.droppableId].items = sourceItems\r\n        column[destination.droppableId].items = destItems\r\n        column.map((el, idx) => el.items.map(task => task.id === removedId ? task.status = idx + 1 : ''))\r\n        setTaskList(column)\r\n    } else {\r\n        const [removed] = column[source.droppableId].items.splice(source.index, 1)           // source.index - index of dragged item\r\n        column[source.droppableId].items.splice(destination.index, 0, removed)    // destination.index - index of place where dragged item came to\r\n        setTaskList(column)\r\n    }\r\n};\r\n\r\n\r\nexport default function Board(props) {\r\n\r\n    const [taskList, setTaskList] = useState(props.taskArray)\r\n    useEffect(() => setTaskList(props.taskArray), [props.taskArray]);\r\n\r\n    return (\r\n        <div className='board'>\r\n            <DragDropContext onDragEnd={result => onDragEnd(result, taskList, setTaskList)}>\r\n                {Object.entries(taskList).map(([id, column], idx) => {\r\n                    return (\r\n                        <div className='d-flex flex-column align-items-center mt-5'\r\n                             key={id}\r\n                        >\r\n                            <div className='m-1'>\r\n                                <h6 className={'text-secondary align-center title-border border-' + colors[idx]}>\r\n                                    {column.name.toUpperCase()} {column.items.length}  </h6>\r\n                                <Droppable droppableId={id} key={id}>\r\n                                    {(provided, snapshot) => {\r\n                                        return (\r\n                                            <div\r\n                                                {...provided.droppableProps}\r\n                                                ref={provided.innerRef}\r\n                                                className={snapshot.isDraggingOver ? 'group target-col' : 'group status-col'}\r\n                                            >\r\n                                                {column.items.map((item, index) => {\r\n                                                    return (\r\n                                                        <Draggable key={item.id} draggableId={item.id} index={index}>\r\n                                                            {(provided, snapshot) => {\r\n                                                                return (\r\n                                                                    <div ref={provided.innerRef}\r\n                                                                         {...provided.draggableProps}\r\n                                                                         {...provided.dragHandleProps}\r\n                                                                         onClick={() => props.setShow(item, 'details')}\r\n                                                                        // style={{...provided.draggableProps.style}}\r\n                                                                         className={snapshot.isDragging ? 'item dragging' : 'item'}\r\n                                                                    >\r\n                                                                        <TaskCard item={item}/>\r\n                                                                            </div>\r\n                                                                        )\r\n                                                                }}\r\n                                                            </Draggable>\r\n                                                        );\r\n                                                    } )}\r\n                                                {provided.placeholder}\r\n                                            </div>\r\n                                        )\r\n                                    }}\r\n                                </Droppable>\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                })}\r\n            </DragDropContext>\r\n\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react'\r\nimport parse from 'html-react-parser';\r\nimport {colors, priorityColors, statuses} from \"../data/tasks\";\r\nimport {FaCircle, FaExclamationTriangle} from \"react-icons/fa\";\r\n\r\nfunction TaskDetailsView(props) {\r\n\r\n    const {item} = props\r\n    const parser = new DOMParser();\r\n    // const doc = parser.parseFromString(item.description, \"text/html\")\r\n\r\n    return (\r\n        <>\r\n            <div className='container p-4 '>\r\n                <h5>{item.name}</h5>\r\n                <table className=\"table table-borderless\">\r\n                    <thead>\r\n                    </thead>\r\n                    <tbody>\r\n                    <tr className='row'>\r\n                        <td className=\"col-2\">Status:</td>\r\n                        <td className=\"col-6\">\r\n                            <span>\r\n                                <FaCircle className={'text-' + colors[item.status - 1]}/>\r\n                            </span>\r\n                            {'  '}{statuses[item.status - 1]}\r\n                        </td>\r\n                    </tr>\r\n                    <tr className='row'>\r\n                        <td className=\"col-2\">Priority:</td>\r\n                        <td className=\"col-6\">\r\n                            <span>\r\n                                <FaExclamationTriangle className={priorityColors[item.priority]}/>\r\n                            </span>\r\n                            {'  '}{item.priority}\r\n                        </td>\r\n                    </tr>\r\n                    </tbody>\r\n                </table>\r\n                <label>Description:</label>\r\n                <div className='border p-3'>{parse(item.description)}</div>\r\n                <div>\r\n                    <button className='btn btn-link float-right' onClick={props.setShow}>Close</button>\r\n                    <button className='btn btn-light float-right'\r\n                            onClick={() => props.setShow(props.item, 'edit')}>Edit\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TaskDetailsView;\r\n","import React, {useRef, useState} from 'react'\r\nimport JoditEditor from \"jodit-react\";\r\nimport 'jodit';\r\nimport 'jodit/build/jodit.min.css';\r\nimport {priority, statuses} from \"../data/tasks\";\r\n\r\n\r\nfunction TaskDetailsView(props) {\r\n\r\n    const editor = useRef(null)\r\n\r\n    const config = {\r\n        readonly: false // all options from https://xdsoft.net/jodit/doc/\r\n    }\r\n\r\n    const {item} = props\r\n    const [editedItem, setEditedItem] = useState(props.item)\r\n\r\n    const saveChanges = () => {\r\n        props.changeTask(item.id, editedItem)\r\n        props.setShow(editedItem, 'details')\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className='container p-4 '>\r\n                <table className=\"table table-borderless\">\r\n                    <tbody>\r\n                    <tr className='row'>\r\n                        <td className=\"col-1\">Name:</td>\r\n                        <td className=\"col-6\">\r\n                            <input className=\"form-control-plaintext-sm pl-2\"\r\n                                   value={editedItem.name}\r\n                                   onChange={(e) => setEditedItem({...editedItem, name: e.target.value})}\r\n                            />\r\n                        </td>\r\n                    </tr>\r\n                    <tr className='row'>\r\n                        <td className=\"col-1\">Status:</td>\r\n                        <td className=\"col-sm-4\">\r\n                            <select className=\"form-control-sm\"\r\n                                    id=\"selectStatus\"\r\n                                    value={statuses[editedItem.status - 1]}\r\n                                    onChange={(e) => setEditedItem({\r\n                                        ...editedItem,\r\n                                        status: statuses.indexOf(e.target.value) + 1\r\n                                    })}\r\n                            >\r\n                                {statuses.map((el, i) => (\r\n                                    <option key={i}>{el}</option>\r\n                                ))}\r\n                            </select>\r\n                        </td>\r\n                    </tr>\r\n                    <tr className='row'>\r\n                        <td className=\"col-1\">Priority:</td>\r\n                        <td className=\"col-sm-4\">\r\n                            <select className=\"form-control-sm\"\r\n                                    id=\"selectPriority\"\r\n                                    value={editedItem.priority}\r\n                                    onChange={(e) => setEditedItem({...editedItem, priority: e.target.value})}\r\n                            >\r\n                                {priority.map(el => (\r\n                                    <option key={el}>{el}</option>))}\r\n                            </select>\r\n                        </td>\r\n                    </tr>\r\n                    <tr className='row'>\r\n                        <td className=\"col-1\">Description:</td>\r\n                        <td className=\"col-3\"></td>\r\n                    </tr>\r\n                    <tr className='row'>\r\n                        <td className=\"col-1\"></td>\r\n                        <td className='col-10'>\r\n                            <JoditEditor\r\n                                ref={editor}\r\n                                value={editedItem.description}\r\n                                config={config}\r\n                                tabIndex={1} // tabIndex of textarea\r\n                                onBlur={newContent => setEditedItem({\r\n                                    ...editedItem,\r\n                                    description: newContent.toString()\r\n                                })} // preferred to use only this option to update the content for performance reasons\r\n                                onChange={newContent => {\r\n                                }}\r\n                            />\r\n                        </td>\r\n                    </tr>\r\n                    </tbody>\r\n                </table>\r\n\r\n                <button className='btn btn-link float-right'\r\n                        onClick={() => props.setShow(props.item, 'details')}>Cancel\r\n                </button>\r\n                <button className='btn btn-light float-right' onClick={saveChanges}>Save</button>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TaskDetailsView;\r\n","import React, {useRef, useState} from 'react'\r\nimport JoditEditor from \"jodit-react\";\r\nimport 'jodit';\r\nimport 'jodit/build/jodit.min.css';\r\nimport {priority, statuses} from \"../data/tasks\";\r\n\r\n\r\nconst newTask = {\r\n    id: Date.now(),\r\n    name: '',\r\n    description: '',\r\n    status: 1,\r\n    queue: 0,\r\n    priority: 'Low'\r\n}\r\n\r\nfunction CreateTask(props) {\r\n\r\n    const editor = useRef(null)\r\n\r\n    const config = {\r\n        readonly: false // all options from https://xdsoft.net/jodit/doc/\r\n    }\r\n\r\n    const [editedItem, setEditedItem] = useState(newTask)\r\n    // const [disabledButton, setDisabledButton] = useState(true)\r\n\r\n    const saveTask = () => {\r\n        props.createNewTask(editedItem)\r\n        props.setShow()\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className='container p-4 '>\r\n                <h5>Create new task</h5>\r\n                <table className=\"table table-borderless\">\r\n                    <tbody>\r\n                    <tr className='row'>\r\n                        <td className=\"col-1\">Name:&#42;</td>\r\n                        <td className=\"col-6\">\r\n                            <input className=\"form-control-plaintext-sm pl-2\"\r\n                                   required\r\n                                   value={editedItem.name}\r\n                                   onChange={(e) => setEditedItem({...editedItem, name: e.target.value})}\r\n                            />\r\n                        </td>\r\n                    </tr>\r\n                    <tr className='row'>\r\n                        <td className=\"col-1\">Status:</td>\r\n                        <td className=\"col-sm-4\">\r\n                            <select className=\"form-control-sm\"\r\n                                    id=\"selectStatus\"\r\n                                    value={statuses[editedItem.status - 1]}\r\n                                    onChange={(e) => setEditedItem({\r\n                                        ...editedItem,\r\n                                        status: statuses.indexOf(e.target.value) + 1\r\n                                    })}\r\n                            >\r\n                                {statuses.map((el, i) => (\r\n                                    <option key={i}>{el}</option>\r\n                                ))}\r\n                            </select>\r\n                        </td>\r\n                    </tr>\r\n                    <tr className='row'>\r\n                        <td className=\"col-1\">Priority:</td>\r\n                        <td className=\"col-sm-4\">\r\n                            <select className=\"form-control-sm\"\r\n                                    id=\"selectPriority\"\r\n                                    value={editedItem.priority}\r\n                                    onChange={(e) => setEditedItem({...editedItem, priority: e.target.value})}\r\n                            >\r\n                                {priority.map(el => (\r\n                                    <option key={el} value={el === editedItem.priority}>{el}</option>))}\r\n                            </select>\r\n                        </td>\r\n                    </tr>\r\n                    <tr className='row'>\r\n                        <td className=\"col-1\">Description:</td>\r\n                        <td className=\"col-3\"></td>\r\n                    </tr>\r\n                    <tr className='row'>\r\n                        <td className=\"col-1\"></td>\r\n                        <td className='col-10'>\r\n                            <JoditEditor\r\n                                ref={editor}\r\n                                value={editedItem.description}\r\n                                config={config}\r\n                                tabIndex={1} // tabIndex of textarea\r\n                                onBlur={newContent => setEditedItem({\r\n                                    ...editedItem,\r\n                                    description: newContent.toString()\r\n                                })} // preferred to use only this option to update the content for performance reasons\r\n                                onChange={newContent => {\r\n                                }}\r\n                            />\r\n                        </td>\r\n                    </tr>\r\n                    </tbody>\r\n                </table>\r\n\r\n                <button className='btn btn-link float-right'\r\n                        onClick={props.setShow}>Cancel\r\n                </button>\r\n                <button className='btn btn-light float-right ' disabled={editedItem.name === ''}\r\n                        onClick={saveTask}>Save\r\n                </button>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CreateTask;\r\n","import React from 'react';\r\nimport {Modal} from \"react-bootstrap\";\r\nimport TaskDetailsView from './TaskDetailsView';\r\nimport TaskEditView from './TaskEditView';\r\nimport CreateTask from \"./CreateTask\";\r\n\r\nfunction Modals(props) {\r\n    // const [show, setShow] = useState(false);\r\n\r\n    const handleClose = () => props.setShow();\r\n    // const handleShow = () => props.setShow;\r\n\r\n    switch (props.type) {\r\n        case 'details':\r\n            return (\r\n                <>\r\n                    <Modal show={props.show}\r\n                           size=\"lg\"\r\n                           onHide={handleClose}>\r\n                        <TaskDetailsView item={props.item} setShow={props.setShow}/>\r\n                    </Modal>\r\n                </>\r\n            );\r\n            break;\r\n\r\n        case 'edit':\r\n            return (\r\n                <>\r\n                    <Modal show={props.show}\r\n                           size=\"lg\"\r\n                           onHide={handleClose}>\r\n                        <TaskEditView item={props.item} setShow={props.setShow} changeTask={props.changeTask}/>\r\n                    </Modal>\r\n                </>\r\n            );\r\n            break;\r\n\r\n        case 'create':\r\n            return (\r\n                <>\r\n                    <Modal show={props.show}\r\n                           size=\"lg\"\r\n                           onHide={handleClose}>\r\n                        <CreateTask setShow={props.setShow} createNewTask={props.createNewTask}/>\r\n                    </Modal>\r\n                </>\r\n            );\r\n            break;\r\n\r\n        default :\r\n            return (\r\n                <>\r\n                </>)\r\n    }\r\n}\r\n\r\nexport default Modals;","import React, {useState} from 'react';\nimport './App.css'\nimport Board from \"./components/Board\";\nimport Modals from \"./components/Modals\";\nimport {status, tasks} from \"./data/tasks\";\nimport _ from \"lodash\";\n\nconst newArr = _.cloneDeep(status)\ntasks.map(el => newArr[el.status - 1].items.push(el))\n\nfunction App() {\n    const [show, setShow] = useState(false);\n    const [modalItem, setModalItem] = useState({});\n    const [modalType, setModalType] = useState('');\n    const [taskList, setTaskList] = useState(newArr)\n\n    const handleShowModal = (object, type) => {\n        setShow(true)\n        setModalItem(object)\n        setModalType(type)\n    };\n\n    const changeTask = (id, obj) => {\n        const newList = _.cloneDeep(taskList);\n        newList.map((el, idx) => el.items.map((task, index) => task.id === id ? newList[idx].items[index] = Object.assign(obj) : ''))\n        const newTasks = []\n        newList.map(el => el.items.map(task => newTasks.push(task)))\n        const changedTaskList = _.cloneDeep(status)\n        newTasks.map(el => changedTaskList[el.status - 1].items.push(el))\n        setTaskList(changedTaskList)\n    };\n\n    const createNewTask = (obj) => {\n        const newList = _.cloneDeep(tasks);\n        newList.push(obj)\n        const newArr = _.cloneDeep(status)\n        newList.map(el => newArr[el.status - 1].items.push(el))\n        // console.log('create', newArr)\n        setTaskList(newArr)\n    }\n\n    return (\n        <div className='container'>\n\n            <button className='btn btn-sm btn-outline-dark ml-5' onClick={() => handleShowModal({}, 'create')}>Create\n            </button>\n\n            <Board setShow={handleShowModal}\n                   taskArray={taskList}\n            />\n            <Modals show={show}\n                    setShow={handleShowModal}\n                    item={modalItem}\n                    type={modalType}\n                    createNewTask={createNewTask}\n                    changeTask={changeTask}\n            />\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}